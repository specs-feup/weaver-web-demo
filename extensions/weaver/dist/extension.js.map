{"version":3,"file":"extension.js","mappings":"sFAAA,sBACI,IAAIA,EAAO,GAGX,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACpBD,GAFJ,iEAEqBE,OAAOC,KAAKC,MAAsBC,GAAhBF,KAAKG,WAE5C,OAAON,CACX,C,m2BCLA,oBAAyBO,GAExB,MAAMC,EAAkB,IAAI,EAAAC,gBAAgBF,EAAQG,cACpDH,EAAQI,cAAcC,KACrBC,EAAOC,OAAOC,4BAA4B,iBAAiBP,GAE7D,EAEA,wBAA8B,EAX9B,kBACA,Q,UCDAQ,EAAOC,QAAUC,QAAQ,S,43BCAzB,kBACA,QAEA,wBAIiCC,cAH7BC,MACAC,KAEA,WAAAC,CAA6BH,GAAA,KAAAA,cAAAA,CAA4B,CAElD,kBAAAI,CAAmBC,GACtBC,KAAKL,MAAQI,EAEbA,EAAYE,QAAQC,QAAU,CAE9BC,eAAe,EAEfC,mBAAoB,CAACJ,KAAKN,gBAG1BK,EAAYE,QAAQI,KAAOL,KAAKM,mBAAmBP,EAAYE,QACnE,CAEO,MAAAM,CAAOC,GACVR,KAAKL,MAAQa,CACjB,CAEQ,kBAAAF,CAAmBL,GACvB,MAAMQ,EAAgBR,EAAQS,aAC1BtB,EAAOuB,IAAIC,SAASZ,KAAKN,cAAe,QAAQ,cAE9CmB,EAAYZ,EAAQS,aACtBtB,EAAOuB,IAAIC,SAASZ,KAAKN,cAAe,QAAS,cAE/CoB,EAAeb,EAAQS,aACzBtB,EAAOuB,IAAIC,SAASZ,KAAKN,cAAe,QAAS,cAE/CqB,EAAiBd,EAAQS,aAC3BtB,EAAOuB,IAAIC,SAASZ,KAAKN,cAAe,QAAS,eAGnDsB,GAAQ,IAAAC,YAEd,MAAO,mXASC,kBAAkBC,SAAS,SACzB,kBAAkBC,QAAQ,QAAS,OACnC,kBAAkBA,QAAQ,OAAQ,iIAExClB,EAAQmB,gCACWJ,8GAETP,6CACAM,6CACID,gDACGE,8CACeK,KAAKC,UAAU,wJAKlCN,WAAeH,2CAGhC,E,GCrEAU,EAA2B,CAAC,ECE5BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAanC,QAGrB,IAAID,EAASgC,EAAyBG,GAAY,CAGjDlC,QAAS,CAAC,GAOX,OAHAqC,EAAoBH,GAAUI,KAAKvC,EAAOC,QAASD,EAAQA,EAAOC,QAASiC,GAGpElC,EAAOC,OACf,CCnB0BiC,CAAoB,K","sources":["webpack://weaver/./src/getNonce.ts","webpack://weaver/./src/extension.ts","webpack://weaver/external commonjs \"vscode\"","webpack://weaver/./src/SidebarProvider.ts","webpack://weaver/webpack/bootstrap","webpack://weaver/webpack/startup"],"sourcesContent":["export function getNonce() {\n    let text = \"\";\n    const possible =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    for (let i = 0; i < 32; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n}","import * as vscode from 'vscode';\nimport { SidebarProvider } from './SidebarProvider';\n\nexport function activate(context: vscode.ExtensionContext) {\n\n\tconst sidebarProvider = new SidebarProvider(context.extensionUri);\n\tcontext.subscriptions.push(\n\t\tvscode.window.registerWebviewViewProvider(\"weaver-sidebar\",sidebarProvider)\n\t);\n}\n\nexport function deactivate() {}\n","module.exports = require(\"vscode\");","import * as vscode from \"vscode\";\nimport { getNonce } from \"./getNonce\";\n\nexport class SidebarProvider implements vscode.WebviewViewProvider {\n    _view?: vscode.WebviewView;\n    _doc?: vscode.TextDocument;\n\n    constructor(private readonly _extensionUri: vscode.Uri) {}\n\n    public resolveWebviewView(webviewView: vscode.WebviewView) {\n        this._view = webviewView;\n\n        webviewView.webview.options = {\n        // Allow scripts in the webview\n        enableScripts: true,\n\n        localResourceRoots: [this._extensionUri],\n        };\n\n        webviewView.webview.html = this._getHtmlForWebview(webviewView.webview);\n    }\n\n    public revive(panel: vscode.WebviewView) {\n        this._view = panel;\n    }         \n\n    private _getHtmlForWebview(webview: vscode.Webview) {\n        const styleResetUri = webview.asWebviewUri(\n            vscode.Uri.joinPath(this._extensionUri, \"media\",\"reset.css\")\n        );\n        const scriptUri = webview.asWebviewUri(\n            vscode.Uri.joinPath(this._extensionUri, \"media\", \"teste.css\")\n        );\n        const styleMainUri = webview.asWebviewUri(\n            vscode.Uri.joinPath(this._extensionUri, \"media\", \"teste.css\")\n        );\n        const styleVSCodeUri = webview.asWebviewUri(\n            vscode.Uri.joinPath(this._extensionUri, \"media\", \"vscode.css\")\n        );  \n\n    const nonce = getNonce();\n\n    return `<!DOCTYPE html>\n\t\t\t<html lang=\"en\">\n\t\t\t<head>\n\t\t\t\t<meta charset=\"UTF-8\">\n\t\t\t\t<!--\n\t\t\t\t\tUse a content security policy to only allow loading images from https or from our extension directory,\n\t\t\t\t\tand only allow scripts that have a specific nonce.\n        -->\n        <meta http-equiv=\"Content-Security-Policy\" content=\"default-src ${\n            \"localhost:3000/\".includes(\"https\")\n            ? \"localhost:3000/\".replace(\"https\", \"wss\")\n            : \"localhost:3000/\".replace(\"http\", \"ws\")\n        } ${\"localhost:3000/\"} https://x9lecdo5aj.execute-api.us-east-1.amazonaws.com; img-src https: data:; style-src 'unsafe-inline' ${\n        webview.cspSource\n    }; script-src 'nonce-${nonce}';\">\n\t\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t\t\t<link href=\"${styleResetUri}\" rel=\"stylesheet\">\n\t\t\t\t<link href=\"${styleVSCodeUri}\" rel=\"stylesheet\">\n        <link href=\"${styleMainUri}\" rel=\"stylesheet\">\n        <script nonce=\"${nonce}\">\n            const \"localhost:3000/\" = ${JSON.stringify(\"localhost:3000/\")};\n            const tsvscode = acquireVsCodeApi();\n        </script>\n\t\t\t</head>\n            <body>\n\t\t\t\t<script nonce=\"${nonce}\" src=\"${scriptUri}\"></script>\n\t\t\t</body>\n\t\t</html>`;\n    }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["text","i","charAt","Math","floor","possible","random","context","sidebarProvider","SidebarProvider","extensionUri","subscriptions","push","vscode","window","registerWebviewViewProvider","module","exports","require","_extensionUri","_view","_doc","constructor","resolveWebviewView","webviewView","this","webview","options","enableScripts","localResourceRoots","html","_getHtmlForWebview","revive","panel","styleResetUri","asWebviewUri","Uri","joinPath","scriptUri","styleMainUri","styleVSCodeUri","nonce","getNonce","includes","replace","cspSource","JSON","stringify","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}