{"version":3,"file":"extension.js","mappings":"23BAIA,oBAAyBA,GACrBA,EAAQC,cAAcC,KAAKC,EAAOC,OAAOC,4BAA4B,WAAW,IAAIC,EAA0BN,EAAQO,eAC1H,EAEA,wBAA8B,EAR9B,kBAWA,MAAMD,EAC2BC,aAA7B,WAAAC,CAA6BD,GAAA,KAAAA,aAAAA,CAA2B,CAEjD,kBAAAE,CACHC,EACAC,EACAC,GAGAF,EAAYG,QAAQC,QAAU,CAC1BC,eAAe,EACfC,mBAAoB,CAACC,KAAKV,eAG9BG,EAAYG,QAAQK,KAAOD,KAAKE,kBAAkBT,EAAYG,SAE9DH,EAAYG,QAAQO,oBAAoBC,IACpCA,GAA+B,kBAApBA,EAAQC,SACnBnB,EAAOC,OAAOmB,uBAAuB,0CAG7C,CAEQ,oBAAAC,GASJ,OARaC,QAAQC,IAAIC,UACJ,+PAQzB,CAEQ,iBAAAC,GAEJ,OADaH,QAAQC,IAAIC,UAClB,2VAQX,CAEQ,mBAAAE,GACJ,MAAMC,EAAOL,QAAQC,IAAIC,UAgCzB,MA/Bc,8DAEoB,UAATG,EAAkB,UAAa,uHAGlC,UAATA,EAAkB,UAAa,6zBA2BhD,CAEQ,gBAAAC,GAEJ,OADaN,QAAQC,IAAIC,UAClB,4yDAiEX,CAEQ,iBAAAR,CAAkBN,GAEtB,MAAMiB,EAAOL,QAAQC,IAAIC,UACnBK,EAAW7B,EAAO8B,IAAIC,SAASjB,KAAKV,aAAc,QAAS,GAAGuB,SAEpE,IAAIK,EAAuB,UAATL,EAAmB,KAAO,KAG5C,MAAO,mVAFMjB,EAAQuB,aAAaJ,WASOF,uBAAmCK,0FAI1DlB,KAAKc,+CACLd,KAAKY,uYAODZ,KAAKO,uIAG8C,UAATM,EAAmB,UAAY,4iBAUzEb,KAAKW,gWAMKf,EAAQuB,aAAajC,EAAO8B,IAAIC,SAASjB,KAAKV,aAAc,QAAS,gNAGrEM,EAAQuB,aAAajC,EAAO8B,IAAIC,SAASjB,KAAKV,aAAc,QAAS,0LAOzG,E,UC3NJ8B,EAAOC,QAAUC,QAAQ,S,GCCrBC,EAA2B,CAAC,ECE5BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,CAAC,GAOX,OAHAQ,EAAoBH,GAAUI,KAAKV,EAAOC,QAASD,EAAQA,EAAOC,QAASI,GAGpEL,EAAOC,OACf,CCnB0BI,CAAoB,K","sources":["webpack://weaver/./src/extension.ts","webpack://weaver/external commonjs \"vscode\"","webpack://weaver/webpack/bootstrap","webpack://weaver/webpack/startup"],"sourcesContent":["import * as vscode from 'vscode';\nimport { join } from 'path';\nimport * as path from 'path';\n\nexport function activate(context: vscode.ExtensionContext) {\n    context.subscriptions.push(vscode.window.registerWebviewViewProvider('e-weaver',new WeaverWebviewViewProvider(context.extensionUri)));\n}\n\nexport function deactivate() {}\n\n\nclass WeaverWebviewViewProvider implements vscode.WebviewViewProvider {\n    constructor(private readonly extensionUri: vscode.Uri) {}\n    \n    public resolveWebviewView(\n        webviewView: vscode.WebviewView,\n        _context: vscode.WebviewViewResolveContext,\n        _token: vscode.CancellationToken\n    ) \n    {\n        webviewView.webview.options = {\n            enableScripts: true,\n            localResourceRoots: [this.extensionUri]\n        };\n\n        webviewView.webview.html = this.getHtmlForWebview(webviewView.webview);\n\n        webviewView.webview.onDidReceiveMessage(message => {\t\n        if (message && message.command === 'buttonClicked') {\n            vscode.window.showInformationMessage('Button inside Weaver sidebar clicked!');\n        }\n        });\n    }\n\n    private getScriptWeaveButton(): string{\n        const tool = process.env.TOOL_NAME;\n        const buttonScript = `\n            const vscode = acquireVsCodeApi();\n            function onButtonClick() {\n                vscode.postMessage({ command: 'buttonClicked' });\n            }\n            window.addEventListener('message', event => { \"hello\" });\n        `;\n        return buttonScript;\n    }\n\n    private getScriptDropdown(): string{\n        const tool = process.env.TOOL_NAME;\n        return `\n                const vscode = acquireVsCodeApi();\n\n                function onDropdownChange() {\n                    const select = document.getElementById('dropdown');\n                    const selectedValue = select.value;\n                    vscode.postMessage({ command: 'dropdownChanged', value: selectedValue });\n                }`;\n    }\n\n    private getWeaveButtonStyle(): string {\n        const tool = process.env.TOOL_NAME;\n        const style = `\n        .weaver-button {\n            background-color:  ${tool === \"clava\"? \"#992222\" :  \"#fd4\"};\n            border-radius: 6px;\n            box-shadow: rgba(0, 0, 0, 0.1) 0 2px 4px;\n            color: ${tool === \"clava\"? \"#ffffff\" :  \"#000000\"};\n            cursor: pointer;\n            display: flex;\n            flex-direction: column;\n            font-family: Inter,-apple-system,system-ui,Roboto,\"Helvetica Neue\",Arial,sans-serif;\n            width: 234px;\n            height: 40px;\n            line-height: 40px;\n            outline: 0;\n            overflow: hidden;\n            padding: 0 20px;\n            pointer-events: auto;\n            position: relative;\n            text-align: center;\n            touch-action: manipulation;\n            user-select: none;\n            -webkit-user-select: none;\n            white-space: nowrap;\n            z-index: 9;\n            border: 0;\n            transition: box-shadow .2s;\n        }\n\n        .weaver-button:hover {\n            box-shadow: rgba(253, 76, 0, 0.5) 0 3px 8px;\n        }`;\n        return style;\n    }\n\n    private getDropDownStyle(): string {\n        const tool = process.env.TOOL_NAME;\n        return `\n        .custom-select select {\n            appearance: none;\n            -webkit-appearance: none;\n            -moz-appearance: none;\t\t\t\t\n            background-color: #ffe5e5;   \n            color: #660000;              \n            border: 1px solid #ff9999;   \n            border-radius: 6px;\n            padding: 0.6em 1em;\n            font-size: 0.9rem;\n            font-family: inherit;\n            cursor: pointer;\n            transition: background-color 0.2s ease, border-color 0.2s ease;\n        }\n\n        .custom-select select:hover {\n            background-color: #ffd6d6;   \n            border-color: #ff6666;\n        }\n\n        .custom-select select:focus {\n            outline: none;\n            background-color: #ffcccc;\n            border-color: #ff3333;\n            box-shadow: 0 0 0 2px rgba(255, 51, 51, 0.2);\n        }\n\n        .custom-select::before,\n        .custom-select::after {\n            --size: 0.3rem;\n            content: \"\";\n            position: absolute;\n            right: 1rem;\n            pointer-events: none;\n        }\n\n        .custom-select::before {\n            border-left: var(--size) solid transparent;\n            border-right: var(--size) solid transparent;\n            border-bottom: var(--size) solid #660000;\n            top: 40%;\n        }\n\n        .custom-select::after {\n            border-left: var(--size) solid transparent;\n            border-right: var(--size) solid transparent;\n            border-top: var(--size) solid #660000;\n            top: 55%;\n        }\n\n        .custom-select {\n            position: relative;\n            min-width: 230px;\n        }\n\n\n        * {\n            box-sizing: border-box;\n        }\n\n        body {\n            min-height: 100vh;\n            display: grid;\n        }`;\n    }\n\n    private getHtmlForWebview(webview: vscode.Webview): string {\n\n        const tool = process.env.TOOL_NAME;\n        const img_disk = vscode.Uri.joinPath(this.extensionUri, 'media', `${tool}.png`);\n        const img_width = \"234\";\n        let img_height = (tool === \"clava\")? \"64\" : \"46\"; \n        const path = webview.asWebviewUri(img_disk);\n        \n        return `\n        <!DOCTYPE html>\n        <html lang=\"en\">\n            <body>\n                <div style=\"height:100vh; max-width:fit-content; display:flex; flex-direction: column; gap: 30px; padding: 10px\">\n\n                    <div style = \"display:flex; flex-direction: row; justify-content: center\">\n                        <img src= ${path} alt=\"${tool}\" width=${img_width} height=${img_height}>\n                    </div>\n\n                    <style>\n                        ${this.getDropDownStyle()}\n                        ${this.getWeaveButtonStyle()}\n                    </style>\n\n                    <div style = \"display: flex; flex-direction: column; gap: 20px; align-items: center\">\n                        <button class = \"weaver-button\" onclick=\"onButtonClick()\"><span class = \"text\">Weave Application</span></button>\n                        \n                        <script>\n                            ${this.getScriptWeaveButton()}\n                        </script>\n\n                        <div class=\"custom-select\" style=\"visibility: ${tool === \"clava\" ? \"visible\" : \"hidden\"};\">\n                            <select>\n                                <option value=\"\">Qual Ã© o melhor filme de shrek?</option>\n                                <option value=\"\">shrek 1</option>\n                                <option value=\"\">shrek 2</option>\n                                <option value=\"\">shrek 3</option>\n                                <option value=\"\">shrek Para sempre</option>\n                            </select>\n                        </div>\n                        <script>\n                            ${this.getScriptDropdown()}\t\n                        </script>\n                    </div>\n\n                    <div style = \"display: flex; flex-direction: column; gap: 10px; align-items: center; margin-top: auto; margin-bottom: 10px\">\n                        <a href=\"https://specs.fe.up.pt/\" target=\"_blank\">\n                            <img src= ${webview.asWebviewUri(vscode.Uri.joinPath(this.extensionUri, 'media', `specs_logo.png`))} alt=\"SPECS-logo\" width=170 height=67>\n                        </a>\n                        <a href=\"https://sigarra.up.pt/feup\" target=\"_blank\">\n                            <img src= ${webview.asWebviewUri(vscode.Uri.joinPath(this.extensionUri, 'media', `feup_logo.png`))} alt=\"FEUP-logo\" width=170 height=59>\n                        </a>\n                    </div>\n                </div>\n            </body>\n        </html>\n        `;\n    }\n}                   ","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["context","subscriptions","push","vscode","window","registerWebviewViewProvider","WeaverWebviewViewProvider","extensionUri","constructor","resolveWebviewView","webviewView","_context","_token","webview","options","enableScripts","localResourceRoots","this","html","getHtmlForWebview","onDidReceiveMessage","message","command","showInformationMessage","getScriptWeaveButton","process","env","TOOL_NAME","getScriptDropdown","getWeaveButtonStyle","tool","getDropDownStyle","img_disk","Uri","joinPath","img_height","asWebviewUri","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}