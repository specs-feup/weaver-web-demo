{"version":3,"file":"extension.js","mappings":"23BAMA,WAAOA,eAAwBC,GAC3BC,QAAQC,IAAI,qCAEZ,MAAMC,EAAkBC,EAAOC,UAAUC,mBAAmB,GAE5D,IAAKH,EAED,YADAF,QAAQM,MAAM,2FAGlB,MAAMC,EAAO,CACTJ,EAAOK,IAAIC,SAASP,EAAgBQ,IAAK,mBACzCP,EAAOK,IAAIC,SAASP,EAAgBQ,IAAK,aACzCP,EAAOK,IAAIC,SAASP,EAAgBQ,IAAK,qBACzCP,EAAOK,IAAIC,SAASP,EAAgBQ,IAAK,kBAGvCC,EAAaJ,GAEnB,MAAMK,EAAaT,EAAOU,SAASC,gBAAgB,WAAYhB,gBACrDa,EAAaJ,KAEvBR,EAAQgB,cAAcC,KAAKJ,EAC/B,EA2BA,wBAA8B,EArD9B,kBA6BAd,eAAea,EAAaM,SAClBd,EAAOU,SAASK,eAAe,yCAC/Bf,EAAOU,SAASK,eAAe,wCAC/Bf,EAAOU,SAASK,eAAe,2CAC/Bf,EAAOU,SAASK,eAAe,gDAC/Bf,EAAOU,SAASK,eAAe,oCAErC,MAAMC,EAAe,CACjB,CAAEC,MAAOjB,EAAOkB,WAAWC,IAAKC,KAAMN,EAAU,IAChD,CAAEG,MAAOjB,EAAOkB,WAAWG,IAAKD,KAAMN,EAAU,IAChD,CAAEG,MAAOjB,EAAOkB,WAAWI,MAAOF,KAAMN,EAAU,IAClD,CAAEG,MAAOjB,EAAOkB,WAAWK,KAAMH,KAAMN,EAAU,KAGrD,IAAK,MAAMU,KAAQR,EAAc,CAC7B,MAAMS,QAAiBzB,EAAOC,UAAUyB,iBAAiBF,EAAKJ,YACxDpB,EAAO2B,OAAOC,iBAAiBH,EAAU,CAC3CI,WAAYL,EAAKP,MACjBa,SAAS,GAEjB,CACJ,C,UCpDAC,EAAOC,QAAUC,QAAQ,S,GCCrBC,EAA2B,CAAC,ECE5BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,CAAC,GAOX,OAHAQ,EAAoBH,GAAUI,KAAKV,EAAOC,QAASD,EAAQA,EAAOC,QAASI,GAGpEL,EAAOC,OACf,CCnB0BI,CAAoB,K","sources":["webpack://layout-builder/./src/extension.ts","webpack://layout-builder/external commonjs \"vscode\"","webpack://layout-builder/webpack/bootstrap","webpack://layout-builder/webpack/startup"],"sourcesContent":["// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\n\n// This method is called when your extension is activated\n// Your extension is activated the very first time the command is executed\nexport async function activate(context: vscode.ExtensionContext) {\n    console.log('Extension \"layout-builder\" active');\n\n    const workspaceFolder = vscode.workspace.workspaceFolders?.[0];\n\n    if (!workspaceFolder) {\n        console.error('No workspace folder is open. The \"layout-builder\" extension requires an open workspace.');\n        return;\n    }\n    const uris = [\n        vscode.Uri.joinPath(workspaceFolder.uri, 'input/input.cpp'),\n        vscode.Uri.joinPath(workspaceFolder.uri, 'script.js'),\n        vscode.Uri.joinPath(workspaceFolder.uri, 'result/result.cpp'),\n        vscode.Uri.joinPath(workspaceFolder.uri, 'log.txt')\n    ];\n    \n    await setup2x2Grid(uris);\n\n    const disposable = vscode.commands.registerCommand('2x2-grid', async () => {\n        await setup2x2Grid(uris);\n    });\n    context.subscriptions.push(disposable);\n}\n\n\nasync function setup2x2Grid(filePaths: vscode.Uri[]): Promise<void> {\n    await vscode.commands.executeCommand('workbench.action.closeAllGroups');\n    await vscode.commands.executeCommand('workbench.action.splitEditorUp');\n    await vscode.commands.executeCommand('workbench.action.splitEditorRight');\n    await vscode.commands.executeCommand('workbench.action.focusThirdEditorGroup');\n    await vscode.commands.executeCommand('workbench.action.splitEditorLeft');\n\n    const editorGroups = [\n        { group: vscode.ViewColumn.One, file: filePaths[0] },\n        { group: vscode.ViewColumn.Two, file: filePaths[1] },\n        { group: vscode.ViewColumn.Three, file: filePaths[2] },\n        { group: vscode.ViewColumn.Four, file: filePaths[3] }\n    ];\n\n    for (const item of editorGroups) {\n        const document = await vscode.workspace.openTextDocument(item.file);\n        await vscode.window.showTextDocument(document, {\n            viewColumn: item.group,\n            preview: false\n        });\n    }\n}\n\n// This method is called when your extension is deactivated\nexport function deactivate() {}\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["async","context","console","log","workspaceFolder","vscode","workspace","workspaceFolders","error","uris","Uri","joinPath","uri","setup2x2Grid","disposable","commands","registerCommand","subscriptions","push","filePaths","executeCommand","editorGroups","group","ViewColumn","One","file","Two","Three","Four","item","document","openTextDocument","window","showTextDocument","viewColumn","preview","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}